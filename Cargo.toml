[workspace]

[package]
name = "amadeus"
version = "0.3.1"
license = "Apache-2.0"
authors = ["Alec Mocatta <alec@mocatta.net>"]
categories = ["concurrency", "science", "database", "parser-implementations", "text-processing"]
keywords = ["constellation", "distributed", "data-science", "data", "logs"]
description = """
Harmonious distributed data processing & analysis in Rust.

parquet postgres aws s3 cloudfront elb json csv logs hadoop hdfs arrow common crawl
"""
repository = "https://github.com/alecmocatta/amadeus"
homepage = "https://github.com/alecmocatta/amadeus"
documentation = "https://docs.rs/amadeus"
readme = "README.md"
edition = "2018"

[badges]
azure-devops = { project = "alecmocatta/amadeus", pipeline = "tests", build = "26" }
maintenance = { status = "actively-developed" }

[features]
constellation = ["constellation-rs", "serde_traitobject"]
aws = ["amadeus-aws"]
commoncrawl = ["amadeus-commoncrawl"]
parquet = ["amadeus-parquet", "amadeus-derive/parquet"]
postgres = ["amadeus-postgres", "amadeus-derive/postgres"]
csv = ["amadeus-serde", "amadeus-derive/serde"]
json = ["amadeus-serde", "amadeus-derive/serde"]

[package.metadata.docs.rs]
features = ["constellation", "aws", "commoncrawl", "parquet", "postgres", "csv", "json"]

[dependencies]
amadeus-core = { version = "=0.3.1", path = "amadeus-core" }
amadeus-derive = { version = "=0.3.1", path = "amadeus-derive" }
amadeus-types = { version = "=0.3.1", path = "amadeus-types" }
amadeus-aws = { version = "=0.3.1", path = "amadeus-aws", optional = true }
amadeus-commoncrawl = { version = "=0.3.1", path = "amadeus-commoncrawl", optional = true }
amadeus-parquet = { version = "=0.3.1", path = "amadeus-parquet", optional = true }
amadeus-postgres = { version = "=0.3.1", path = "amadeus-postgres", optional = true }
amadeus-serde = { version = "=0.3.1", path = "amadeus-serde", optional = true }
async-channel = "1.1"
constellation-rs = { version = "0.1", default-features = false, optional = true }
derive-new = "0.5"
doc-comment = "0.3"
futures = "0.3"
num_cpus = "1.13"
pin-project = "0.4"
serde = { version = "1.0", features = ["derive"] }
serde_closure = "0.3"
serde_traitobject = { version = "0.2", optional = true }
tokio = { version = "0.2", features = ["rt-threaded", "rt-util", "blocking"] }

[dev-dependencies]
either = { version = "1.5", features = ["serde"] }
rand = "0.7"
serde_json = "1.0"
streaming_algorithms = "0.2"
tokio = { version = "0.2", features = ["macros", "time"] }

[[example]]
name = "cloudfront_logs"
required-features = ["aws"]

[[example]]
name = "columnar"
required-features = ["aws"]

[[example]]
name = "commoncrawl"
required-features = ["commoncrawl"]

[[example]]
name = "commoncrawl_dist"
required-features = ["commoncrawl", "constellation"]

[[test]]
name = "into_par_stream_dist"
harness = false

[[test]]
name = "panic_dist"
harness = false

[[test]]
name = "threads_dist"
harness = false

[[test]]
name = "cloudfront"
required-features = ["aws"]

[[test]]
name = "cloudfront_dist"
harness = false
required-features = ["aws"]

[[test]]
name = "commoncrawl"
required-features = ["commoncrawl"]

[[test]]
name = "commoncrawl_dist"
harness = false
required-features = ["commoncrawl"]

[[test]]
name = "parquet"
required-features = ["parquet"]

[[test]]
name = "parquet_dist"
harness = false
required-features = ["parquet"]

[[test]]
name = "csv"
required-features = ["csv"]

[[test]]
name = "csv_dist"
harness = false
required-features = ["csv"]

[[test]]
name = "json"
required-features = ["json"]

[[test]]
name = "json_dist"
harness = false
required-features = ["json"]

[[test]]
name = "postgres"
required-features = ["postgres"]
test = false # TODO set up postgres on CI

[[test]]
name = "postgres_dist"
harness = false
required-features = ["postgres"]
test = false # TODO set up postgres on CI
